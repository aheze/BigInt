{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint"]}],"topicSections":[{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References","doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"]},{"title":"Structures","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BFraction","doc:\/\/BigInt\/documentation\/BigInt\/BInt","doc:\/\/BigInt\/documentation\/BigInt\/CRT"]},{"title":"Type Aliases","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Byte","doc:\/\/BigInt\/documentation\/BigInt\/Bytes","doc:\/\/BigInt\/documentation\/BigInt\/Limb","doc:\/\/BigInt\/documentation\/BigInt\/Limbs"]}],"sections":[],"metadata":{"roleHeading":"Framework","role":"collection","modules":[{"name":"BigInt"}],"title":"BigInt","symbolKind":"module","externalID":"BigInt"},"hierarchy":{"paths":[[]]},"kind":"symbol","primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The BigInt package provides arbitrary-precision integer arithmetic in Swift.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Its functionality falls in the following categories:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Arithmetic:","type":"text"}],"type":"strong"},{"text":" add, subtract, multiply, divide, remainder and exponentiation","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Comparison:"}]},{"type":"text","text":" the six standard operations == != < <= > >="}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Shifting:"}],"type":"strong"},{"text":" logical left shift and rigth shift","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Logical:"}]},{"text":" bitwise and, or, xor, and not","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Modulo:","type":"text"}],"type":"strong"},{"type":"text","text":" normal modulus, inverse modulus, and modular exponentiation"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Conversion:"}],"type":"strong"},{"text":" to double, to integer, to string, to magnitude byte array, and to 2â€™s complement byte array","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Primes:","type":"text"}]},{"text":" prime number testing, probable prime number generation and primorial","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Miscellaneous:","type":"text"}],"type":"strong"},{"type":"text","text":" random number generation, greatest common divisor, least common multiple, n-th root, square root modulo an odd prime,"},{"type":"text","text":" "},{"type":"text","text":"Jacobi symbol, Kronecker symbol, Factorial function, Binomial function, Fibonacci numbers, Lucas numbers and Bernoulli numbers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Fractions:","type":"text"}],"type":"strong"},{"type":"text","text":" Standard arithmetic on fractions whose numerators and denominators are of unbounded size"}]}]}],"type":"unorderedList"},{"style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"BigInt requires Swift 5.0. It also requires that the Int and UInt types be 64 bit types."}],"type":"paragraph"}],"name":"Important"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/BigInt\/documentation\/BigInt","interfaceLanguage":"swift"},"references":{"doc://BigInt/documentation/BigInt/Limb":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Limb"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Limb","kind":"symbol","abstract":[{"type":"text","text":"Unsigned 64 bit value"}],"type":"topic","url":"\/documentation\/bigint\/limb","title":"Limb","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Limb"}]},"doc://BigInt/documentation/BigInt/Fractions":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions","abstract":[],"type":"topic","title":"Fractions","url":"\/documentation\/bigint\/fractions","role":"article"},"doc://BigInt/documentation/BigInt/Examples":{"kind":"article","role":"article","abstract":[],"url":"\/documentation\/bigint\/examples","type":"topic","title":"Examples","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples"},"doc://BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","type":"topic","role":"article","kind":"article","url":"\/documentation\/bigint\/performance","abstract":[],"title":"Performance"},"doc://BigInt/documentation/BigInt/CRT":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/CRT","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CRT"}],"url":"\/documentation\/bigint\/crt","navigatorTitle":[{"text":"CRT","kind":"identifier"}],"abstract":[{"type":"text","text":"CRT instances implement the Chinese Remainder Theorem"}],"title":"CRT"},"doc://BigInt/documentation/BigInt/Chinese":{"url":"\/documentation\/bigint\/chinese","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese","role":"article","kind":"article","title":"Chinese Remainder Theorem","type":"topic"},"doc://BigInt/documentation/BigInt/Byte":{"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"navigatorTitle":[{"kind":"identifier","text":"Byte"}],"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Byte","role":"symbol","kind":"symbol","url":"\/documentation\/bigint\/byte","title":"Byte"},"doc://BigInt/documentation/BigInt/Usage":{"url":"\/documentation\/bigint\/usage","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","role":"article","kind":"article","title":"Usage","type":"topic"},"doc://BigInt/documentation/BigInt/Bytes":{"kind":"symbol","url":"\/documentation\/bigint\/bytes","title":"Bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bytes"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Bytes","role":"symbol"},"doc://BigInt/documentation/BigInt/BInt":{"abstract":[{"type":"text","text":"A signed integer of unbounded size."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BInt"}],"type":"topic","kind":"symbol","url":"\/documentation\/bigint\/bint","role":"symbol","navigatorTitle":[{"text":"BInt","kind":"identifier"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BInt","title":"BInt"},"doc://BigInt/documentation/BigInt/Limbs":{"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Limbs"}],"navigatorTitle":[{"text":"Limbs","kind":"identifier"}],"abstract":[{"type":"text","text":"Array of unsigned 64 bit values"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Limbs","role":"symbol","kind":"symbol","url":"\/documentation\/bigint\/limbs","title":"Limbs"},"doc://BigInt/documentation/BigInt/Dependencies":{"url":"\/documentation\/bigint\/dependencies","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","role":"article","kind":"article","title":"Dependencies","type":"topic"},"doc://BigInt/documentation/BigInt/Algorithms":{"type":"topic","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms","role":"article","kind":"article","url":"\/documentation\/bigint\/algorithms","title":"Algorithms"},"doc://BigInt/documentation/BigInt":{"kind":"symbol","url":"\/documentation\/bigint","abstract":[],"type":"topic","role":"collection","title":"BigInt","identifier":"doc:\/\/BigInt\/documentation\/BigInt"},"doc://BigInt/documentation/BigInt/References":{"url":"\/documentation\/bigint\/references","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","role":"article","kind":"article","title":"References","type":"topic"},"doc://BigInt/documentation/BigInt/BFraction":{"navigatorTitle":[{"text":"BFraction","kind":"identifier"}],"title":"BFraction","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BFraction","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BFraction","abstract":[{"type":"text","text":"A signed fraction with numerator and denominator of unbounded size."}],"type":"topic","role":"symbol","url":"\/documentation\/bigint\/bfraction"}}}