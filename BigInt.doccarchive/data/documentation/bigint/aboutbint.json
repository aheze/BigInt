{"kind":"article","hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"sections":[],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"BigInt"}],"title":"About BInt"},"abstract":[{"type":"text","text":"Signed integers of unbounded size"}],"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/References","doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BInt","isActive":true},{"type":"text","text":" values are represented with magnitude and sign:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The magnitude is an array of unsigned 64 bit integers (a.k.a. Limbs)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The sign is a boolean value, "},{"code":"true","type":"codeVoice"},{"text":" means value < 0, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" means value >= 0","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The representation is little-endian, least significant Limb has index 0"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The representation is minimal, there is no leading zero Limbs. The exception is that the value 0 is represented as a single 64 bit zero Limb and sign "},{"code":"false","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Creating-BInts","text":"Creating BInt’s"},{"syntax":"swift","code":["\/\/ From an integer","let a = BInt(27)","","\/\/ From a decimal value","let x = BInt(1.12345e30) \/\/ x = 1123450000000000064996914495488","","\/\/ From string literals","let b = BInt(\"123456789012345678901234567890\")!","let c = BInt(\"1234567890abcdef1234567890abcdef\", radix: 16)!","","\/\/ From magnitude and sign","let m: Limbs = [1, 2, 3]","let d = BInt(m) \/\/ d = 1020847100762815390427017310442723737601","let e = BInt(m, true) \/\/ e = -1020847100762815390427017310442723737601","","\/\/ From a big-endian 2's complement byte array","let f = BInt(signed: [255, 255, 127]) \/\/ f = -129","","\/\/ From a big-endian magnitude byte array","let g = BInt(magnitude: [255, 255, 127]) \/\/ g = 16777087","","\/\/ Random value with specified bitwidth","let h = BInt(bitWidth: 43) \/\/ For example h = 3965245974702 (=0b111001101100111011000100111110100010101110)","","\/\/ Random value less than a given value","let i = h.randomLessThan() \/\/ For example i = 583464003284"],"type":"codeListing"},{"text":"Converting BInt’s","anchor":"Converting-BInts","type":"heading","level":3},{"code":["let x = BInt(16777087)","","\/\/ To double","let d = x.asDouble() \/\/ d = 16777087.0","","\/\/ To strings","let s1 = x.asString() \/\/ s1 = \"16777087\"","let s2 = x.asString(radix: 16) \/\/ s2 = \"ffff7f\"","","\/\/ To big-endian magnitude byte array","let b1 = x.asMagnitudeBytes() \/\/ b1 = [255, 255, 127]","","\/\/ To big-endian 2's complement byte array","let b2 = x.asSignedBytes() \/\/ b2 = [0, 255, 255, 127]"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":3,"anchor":"Operations","text":"Operations"},{"inlineContent":[{"text":"The operations available to ","type":"text"},{"code":"BInt","type":"codeVoice"},{"text":" are:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Arithmetic:","type":"text"}]},{"text":" addition, subtraction, multiplication, division, exponentiation, remainder and modulus, gcd and lcm","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Comparison:","type":"text"}],"type":"strong"},{"type":"text","text":" the six standard operations ==  !=  <  <=  >  >="}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Shift Operations:","type":"text"}],"type":"strong"},{"type":"text","text":" logical left- and right shifts"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Bit Operations:"}]},{"text":" logical and, or, xor, not, bit manipulation","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Root Extraction:","type":"text"}]},{"type":"text","text":" sqrt, sqrtMod, sqrtRemainder, isPerfectSquare, root, rootRemainder, isPerfectRoot"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Prime Number:"}]},{"type":"text","text":" probablePrime, nextPrime, isProbablyPrime, primorial"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Miscellaneous:","type":"text"}]},{"text":" randomLessThan, binomial, factorial, fibonacci, jacobiSymbol, kroneckerSymbol, lucas","type":"text"}]}]}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/aboutbint"]}],"references":{"doc://BigInt/documentation/BigInt/Algorithms":{"url":"\/documentation\/bigint\/algorithms","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"type":"topic","role":"article","kind":"article","title":"Algorithms"},"doc://BigInt/documentation/BigInt/AboutCRT":{"type":"topic","role":"article","title":"About CRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"url":"\/documentation\/bigint\/aboutcrt","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","kind":"article"},"doc://BigInt/documentation/BigInt/AboutBFraction":{"title":"About BFraction","url":"\/documentation\/bigint\/aboutbfraction","abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction"},"doc://BigInt/documentation/BigInt":{"url":"\/documentation\/bigint","title":"BigInt","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}]},"doc://BigInt/documentation/BigInt/References":{"title":"References","url":"\/documentation\/bigint\/references","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article","type":"topic"},"doc://BigInt/documentation/BigInt/BInt":{"type":"topic","kind":"symbol","title":"BInt","abstract":[{"type":"text","text":"The BInt structure"}],"role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BInt","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BInt","kind":"identifier"}],"url":"\/documentation\/bigint\/bint","navigatorTitle":[{"kind":"identifier","text":"BInt"}]},"doc://BigInt/documentation/BigInt/Performance":{"title":"Performance","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}],"url":"\/documentation\/bigint\/performance","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance"}}}