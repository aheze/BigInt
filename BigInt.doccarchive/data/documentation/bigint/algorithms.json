{"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"metadata":{"roleHeading":"Article","title":"Algorithms","modules":[{"name":"BigInt"}],"role":"article"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"","type":"heading","level":2,"text":""},{"level":3,"text":"Multiplication","type":"heading","anchor":"Multiplication"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"ToomCook-3 algorithm for numbers above 12800 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers above 6400 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}]}]}],"type":"unorderedList"},{"text":"Division and Remainder","anchor":"Division-and-Remainder","type":"heading","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm D"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}]}]}]},{"level":3,"text":"Greatest Common Divisor and Extended Greatest Common Divisor","type":"heading","anchor":"Greatest-Common-Divisor-and-Extended-Greatest-Common-Divisor"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase."}]},{"type":"heading","text":"Modular Exponentiation","anchor":"Modular-Exponentiation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits"},{"type":"text","text":" "},{"type":"text","text":"and Montgomery reduction for larger exponents."}]},{"anchor":"Inverse-Modulus","type":"heading","level":3,"text":"Inverse Modulus"},{"inlineContent":[{"type":"text","text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7."},{"type":"text","text":" "},{"type":"text","text":"Else, it is computed via the extended GCD algorithm."}],"type":"paragraph"},{"level":3,"text":"Square Root","type":"heading","anchor":"Square-Root"},{"inlineContent":[{"text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase.","type":"text"}],"type":"paragraph"},{"anchor":"Square-Root-Modulo-a-Prime-Number","type":"heading","level":3,"text":"Square Root Modulo a Prime Number"},{"inlineContent":[{"type":"text","text":"Algorithm 2.3.8 from [CRANDALL]."}],"type":"paragraph"},{"text":"Prime Number Test","level":3,"anchor":"Prime-Number-Test","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Miller-Rabin test.","type":"text"}]},{"text":"Prime Number Generation","type":"heading","level":3,"anchor":"Prime-Number-Generation"},{"type":"paragraph","inlineContent":[{"text":"The algorithm from Java BigInteger translated to Swift.","type":"text"}]},{"text":"Factorial","level":3,"anchor":"Factorial","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SplitRecursive"},{"text":" algorithm from Peter Luschny: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.luschny.de"}],"type":"paragraph"},{"level":3,"text":"Fibonacci","anchor":"Fibonacci","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"fastDoubling"},{"text":" algorithm from Project Nayuki: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.nayuki.io"}]},{"anchor":"Jacobi-and-Kronecker-symbols","type":"heading","level":3,"text":"Jacobi and Kronecker symbols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]."}]},{"type":"heading","level":3,"text":"Bernoulli Numbers","anchor":"Bernoulli-Numbers"},{"inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"type":"text","text":" "},{"text":"but no fraction arithmetic.","type":"text"}],"type":"paragraph"},{"text":"Chinese Remainder Theorem","level":3,"type":"heading","anchor":"Chinese-Remainder-Theorem"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]."}]}]}],"sections":[],"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/References"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/bigint\/algorithms"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://BigInt/documentation/BigInt/AboutCRT":{"type":"topic","role":"article","title":"About CRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"url":"\/documentation\/bigint\/aboutcrt","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","kind":"article"},"doc://BigInt/documentation/BigInt/AboutBFraction":{"title":"About BFraction","url":"\/documentation\/bigint\/aboutbfraction","abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction"},"doc://BigInt/documentation/BigInt/References":{"title":"References","url":"\/documentation\/bigint\/references","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article","type":"topic"},"doc://BigInt/documentation/BigInt/Performance":{"title":"Performance","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}],"url":"\/documentation\/bigint\/performance","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance"},"doc://BigInt/documentation/BigInt":{"url":"\/documentation\/bigint","title":"BigInt","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}]},"doc://BigInt/documentation/BigInt/AboutBInt":{"title":"About BInt","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Signed integers of unbounded size"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","url":"\/documentation\/bigint\/aboutbint"},"https://www.luschny.de":{"title":"https:\/\/www.luschny.de","titleInlineContent":[{"text":"https:\/\/www.luschny.de","type":"text"}],"type":"link","identifier":"https:\/\/www.luschny.de","url":"https:\/\/www.luschny.de"},"https://www.nayuki.io":{"title":"https:\/\/www.nayuki.io","identifier":"https:\/\/www.nayuki.io","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/www.nayuki.io"}],"url":"https:\/\/www.nayuki.io"}}}