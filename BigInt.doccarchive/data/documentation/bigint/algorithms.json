{"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"metadata":{"title":"Algorithms","roleHeading":"Article","modules":[{"name":"BigInt"}],"role":"article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References"]}],"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"primaryContentSections":[{"content":[{"type":"heading","text":"","anchor":"","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some of the algorithms used in BigInt are described below."}]},{"level":3,"type":"heading","text":"Multiplication","anchor":"Multiplication"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"ToomCook-3 algorithm for numbers above 12800 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Karatsuba algorithm for numbers above 6400 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm M"}]}]}]},{"type":"heading","anchor":"Division-and-Remainder","level":3,"text":"Division and Remainder"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm D"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}],"type":"paragraph"}]}]},{"level":3,"anchor":"Greatest-Common-Divisor-and-Extended-Greatest-Common-Divisor","type":"heading","text":"Greatest Common Divisor and Extended Greatest Common Divisor"},{"inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase."}],"type":"paragraph"},{"text":"Modular Exponentiation","anchor":"Modular-Exponentiation","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits"},{"type":"text","text":" "},{"type":"text","text":"and Montgomery reduction for larger exponents."}]},{"anchor":"Inverse-Modulus","type":"heading","text":"Inverse Modulus","level":3},{"inlineContent":[{"type":"text","text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7."},{"type":"text","text":" "},{"text":"Else, it is computed via the extended GCD algorithm.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Square-Root","text":"Square Root"},{"inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase."}],"type":"paragraph"},{"level":3,"text":"Square Root Modulo a Prime Number","type":"heading","anchor":"Square-Root-Modulo-a-Prime-Number"},{"inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL].","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Prime Number Test","anchor":"Prime-Number-Test","level":3},{"inlineContent":[{"type":"text","text":"Miller-Rabin test."}],"type":"paragraph"},{"anchor":"Prime-Number-Generation","text":"Prime Number Generation","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"The algorithm from Java BigInteger translated to Swift.","type":"text"}]},{"text":"Factorial","type":"heading","level":3,"anchor":"Factorial"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SplitRecursive"},{"type":"text","text":" algorithm from Peter Luschny: "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.luschny.de"}],"type":"paragraph"},{"type":"heading","text":"Fibonacci","level":3,"anchor":"Fibonacci"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"fastDoubling","type":"codeVoice"},{"type":"text","text":" algorithm from Project Nayuki: "},{"isActive":true,"identifier":"https:\/\/www.nayuki.io","type":"reference"}],"type":"paragraph"},{"type":"heading","text":"Jacobi and Kronecker symbols","level":3,"anchor":"Jacobi-and-Kronecker-symbols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]."}]},{"level":3,"type":"heading","anchor":"Bernoulli-Numbers","text":"Bernoulli Numbers"},{"inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"text":" ","type":"text"},{"type":"text","text":"but no fractional arithmetic."}],"type":"paragraph"},{"anchor":"Chinese-Remainder-Theorem","level":3,"text":"Chinese Remainder Theorem","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]."}]}],"kind":"content"}],"references":{"doc://BigInt/documentation/BigInt/Fractions":{"abstract":[],"url":"\/documentation\/bigint\/fractions","kind":"article","role":"article","title":"Fractions","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions"},"doc://BigInt/documentation/BigInt/Performance":{"url":"\/documentation\/bigint\/performance","kind":"article","title":"Performance","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","role":"article","abstract":[],"type":"topic"},"doc://BigInt/documentation/BigInt/References":{"role":"article","type":"topic","title":"References","url":"\/documentation\/bigint\/references","abstract":[],"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References"},"doc://BigInt/documentation/BigInt/Dependencies":{"abstract":[],"url":"\/documentation\/bigint\/dependencies","kind":"article","role":"article","title":"Dependencies","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies"},"doc://BigInt/documentation/BigInt/Examples":{"url":"\/documentation\/bigint\/examples","abstract":[],"kind":"article","role":"article","title":"Examples","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples"},"https://www.luschny.de":{"url":"https:\/\/www.luschny.de","identifier":"https:\/\/www.luschny.de","title":"https:\/\/www.luschny.de","titleInlineContent":[{"type":"text","text":"https:\/\/www.luschny.de"}],"type":"link"},"doc://BigInt/documentation/BigInt/Chinese":{"url":"\/documentation\/bigint\/chinese","abstract":[],"kind":"article","role":"article","title":"Chinese Remainder Theorem","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese"},"doc://BigInt/documentation/BigInt":{"kind":"symbol","abstract":[],"title":"BigInt","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt","role":"collection","url":"\/documentation\/bigint"},"https://www.nayuki.io":{"title":"https:\/\/www.nayuki.io","url":"https:\/\/www.nayuki.io","type":"link","identifier":"https:\/\/www.nayuki.io","titleInlineContent":[{"text":"https:\/\/www.nayuki.io","type":"text"}]},"doc://BigInt/documentation/BigInt/Usage":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","kind":"article","title":"Usage","url":"\/documentation\/bigint\/usage","role":"article","abstract":[],"type":"topic"}}}