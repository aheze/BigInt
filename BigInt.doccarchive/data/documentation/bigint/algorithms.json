{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"sections":[],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"BigInt"}],"title":"Algorithms"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References"]}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"","text":"","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Some of the algorithms used in BigInt are described below."}],"type":"paragraph"},{"type":"heading","anchor":"Multiplication","text":"Multiplication","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"ToomCook-3 algorithm for numbers above 12800 bits"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Karatsuba algorithm for numbers above 6400 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}]}]}]},{"type":"heading","text":"Division and Remainder","anchor":"Division-and-Remainder","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}]}]}]},{"type":"heading","level":3,"text":"Greatest Common Divisor and Extended Greatest Common Divisor","anchor":"Greatest-Common-Divisor-and-Extended-Greatest-Common-Divisor"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase."}]},{"anchor":"Modular-Exponentiation","text":"Modular Exponentiation","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits","type":"text"},{"text":" ","type":"text"},{"text":"and Montgomery reduction for larger exponents.","type":"text"}]},{"anchor":"Inverse-Modulus","level":3,"text":"Inverse Modulus","type":"heading"},{"inlineContent":[{"type":"text","text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7."},{"text":" ","type":"text"},{"text":"Else, it is computed via the extended GCD algorithm.","type":"text"}],"type":"paragraph"},{"anchor":"Square-Root","text":"Square Root","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase."}]},{"level":3,"anchor":"Square-Root-Modulo-a-Prime-Number","text":"Square Root Modulo a Prime Number","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 2.3.8 from [CRANDALL]."}]},{"text":"Prime Number Test","type":"heading","level":3,"anchor":"Prime-Number-Test"},{"inlineContent":[{"text":"Miller-Rabin test.","type":"text"}],"type":"paragraph"},{"text":"Prime Number Generation","level":3,"type":"heading","anchor":"Prime-Number-Generation"},{"inlineContent":[{"type":"text","text":"The algorithm from Java BigInteger translated to Swift."}],"type":"paragraph"},{"type":"heading","text":"Factorial","anchor":"Factorial","level":3},{"inlineContent":[{"type":"text","text":"The "},{"inlineContent":[{"text":"SplitRecursive","type":"text"}],"type":"emphasis"},{"type":"text","text":" algorithm from Peter Luschny: https:\/\/www.luschny.de"}],"type":"paragraph"},{"type":"heading","text":"Fibonacci","anchor":"Fibonacci","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"text":"fastDoubling","type":"text"}]},{"type":"text","text":" algorithm from Project Nayuki: https:\/\/www.nayuki.io"}]},{"level":3,"text":"Jacobi and Kronecker symbols","type":"heading","anchor":"Jacobi-and-Kronecker-symbols"},{"inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]."}],"type":"paragraph"},{"type":"heading","level":3,"text":"Bernoulli Numbers","anchor":"Bernoulli-Numbers"},{"inlineContent":[{"text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but no fractional arithmetic."}],"type":"paragraph"},{"type":"heading","text":"Chinese Remainder Theorem","anchor":"Chinese-Remainder-Theorem","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://BigInt/documentation/BigInt/Fractions":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions","abstract":[],"type":"topic","title":"Fractions","url":"\/documentation\/bigint\/fractions","role":"article"},"doc://BigInt/documentation/BigInt/References":{"url":"\/documentation\/bigint\/references","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","role":"article","kind":"article","title":"References","type":"topic"},"doc://BigInt/documentation/BigInt":{"kind":"symbol","url":"\/documentation\/bigint","abstract":[],"type":"topic","role":"collection","title":"BigInt","identifier":"doc:\/\/BigInt\/documentation\/BigInt"},"doc://BigInt/documentation/BigInt/Chinese":{"url":"\/documentation\/bigint\/chinese","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese","role":"article","kind":"article","title":"Chinese Remainder Theorem","type":"topic"},"doc://BigInt/documentation/BigInt/Examples":{"kind":"article","role":"article","abstract":[],"url":"\/documentation\/bigint\/examples","type":"topic","title":"Examples","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples"},"doc://BigInt/documentation/BigInt/Usage":{"url":"\/documentation\/bigint\/usage","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","role":"article","kind":"article","title":"Usage","type":"topic"},"doc://BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","type":"topic","role":"article","kind":"article","url":"\/documentation\/bigint\/performance","abstract":[],"title":"Performance"},"doc://BigInt/documentation/BigInt/Dependencies":{"url":"\/documentation\/bigint\/dependencies","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","role":"article","kind":"article","title":"Dependencies","type":"topic"}}}