{"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"The BigInt package provides arbitrary-precision integer arithmetic in Swift.","type":"text"},{"type":"text","text":" "},{"text":"Its functionality falls in the following categories:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Arithmetic:"}]},{"text":" add, subtract, multiply, divide, remainder and exponentiation","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Comparison:","type":"text"}]},{"type":"text","text":" the six standard operations == != < <= > >="}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Shifting:","type":"text"}],"type":"strong"},{"type":"text","text":" logical left shift and rigth shift"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Logical:","type":"text"}],"type":"strong"},{"text":" bitwise and, or, xor, and not","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Modulo:","type":"text"}]},{"text":" normal modulus, inverse modulus, and modular exponentiation","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Conversion:"}]},{"text":" to double, to integer, to string, to magnitude byte array, and to 2â€™s complement byte array","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Primes:"}]},{"type":"text","text":" prime number testing, probable prime number generation and primorial"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Miscellaneous:"}],"type":"strong"},{"type":"text","text":" random number generation, greatest common divisor, least common multiple, n-th root, square root modulo an odd prime,"},{"text":" ","type":"text"},{"text":"Jacobi symbol, Kronecker symbol, Factorial function, Binomial function, Fibonacci numbers, Lucas numbers and Bernoulli numbers","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Fractions:"}]},{"text":" Standard arithmetic on fractions whose numerators and denominators are of unbounded size","type":"text"}],"type":"paragraph"}]}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"text":"BigInt requires Swift 5.0. It also requires that the Int and UInt types be 64 bit types.","type":"text"}]}],"name":"Important"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/BigInt\/documentation\/BigInt","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/bigint"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","metadata":{"externalID":"BigInt","role":"collection","symbolKind":"module","modules":[{"name":"BigInt"}],"roleHeading":"Framework","title":"BigInt"},"topicSections":[{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References","doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"]},{"title":"Structures","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BFraction","doc:\/\/BigInt\/documentation\/BigInt\/BInt","doc:\/\/BigInt\/documentation\/BigInt\/CRT"]},{"title":"Type Aliases","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Byte","doc:\/\/BigInt\/documentation\/BigInt\/Bytes","doc:\/\/BigInt\/documentation\/BigInt\/Limb","doc:\/\/BigInt\/documentation\/BigInt\/Limbs"]}],"references":{"doc://BigInt/documentation/BigInt/Usage":{"url":"\/documentation\/bigint\/usage","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","type":"topic","abstract":[],"role":"article","title":"Usage"},"doc://BigInt/documentation/BigInt/Examples":{"url":"\/documentation\/bigint\/examples","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples","type":"topic","abstract":[],"role":"article","title":"Examples"},"doc://BigInt/documentation/BigInt/Chinese":{"url":"\/documentation\/bigint\/chinese","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese","type":"topic","abstract":[],"role":"article","title":"Chinese Remainder Theorem"},"doc://BigInt/documentation/BigInt/Fractions":{"url":"\/documentation\/bigint\/fractions","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions","type":"topic","abstract":[],"role":"article","title":"Fractions"},"doc://BigInt/documentation/BigInt/BFraction":{"kind":"symbol","url":"\/documentation\/bigint\/bfraction","role":"symbol","navigatorTitle":[{"text":"BFraction","kind":"identifier"}],"type":"topic","title":"BFraction","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BFraction","abstract":[{"type":"text","text":"A signed fraction with numerator and denominator of unbounded size."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BFraction","kind":"identifier"}]},"doc://BigInt/documentation/BigInt/BInt":{"type":"topic","abstract":[{"type":"text","text":"A signed integer of unbounded size."}],"role":"symbol","kind":"symbol","title":"BInt","url":"\/documentation\/bigint\/bint","navigatorTitle":[{"kind":"identifier","text":"BInt"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BInt"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BInt"},"doc://BigInt/documentation/BigInt/Bytes":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bytes","kind":"identifier"}],"role":"symbol","title":"Bytes","abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Bytes","type":"topic","url":"\/documentation\/bigint\/bytes","kind":"symbol","navigatorTitle":[{"text":"Bytes","kind":"identifier"}]},"doc://BigInt/documentation/BigInt/Limbs":{"role":"symbol","title":"Limbs","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Limbs"}],"abstract":[{"type":"text","text":"Array of unsigned 64 bit values"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Limbs","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Limbs","kind":"identifier"}],"url":"\/documentation\/bigint\/limbs"},"doc://BigInt/documentation/BigInt/Byte":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Byte","kind":"identifier"}],"role":"symbol","title":"Byte","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Byte","type":"topic","url":"\/documentation\/bigint\/byte","kind":"symbol","navigatorTitle":[{"text":"Byte","kind":"identifier"}]},"doc://BigInt/documentation/BigInt":{"role":"collection","title":"BigInt","abstract":[],"kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt","url":"\/documentation\/bigint","type":"topic"},"doc://BigInt/documentation/BigInt/Limb":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Limb"}],"role":"symbol","title":"Limb","abstract":[{"text":"Unsigned 64 bit value","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Limb","type":"topic","url":"\/documentation\/bigint\/limb","kind":"symbol","navigatorTitle":[{"text":"Limb","kind":"identifier"}]},"doc://BigInt/documentation/BigInt/Algorithms":{"role":"article","title":"Algorithms","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms","type":"topic","kind":"article","url":"\/documentation\/bigint\/algorithms"},"doc://BigInt/documentation/BigInt/References":{"url":"\/documentation\/bigint\/references","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","type":"topic","abstract":[],"role":"article","title":"References"},"doc://BigInt/documentation/BigInt/CRT":{"role":"symbol","title":"CRT","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CRT","kind":"identifier"}],"abstract":[{"type":"text","text":"CRT instances implement the Chinese Remainder Theorem"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/CRT","type":"topic","kind":"symbol","navigatorTitle":[{"text":"CRT","kind":"identifier"}],"url":"\/documentation\/bigint\/crt"},"doc://BigInt/documentation/BigInt/Dependencies":{"url":"\/documentation\/bigint\/dependencies","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","type":"topic","abstract":[],"role":"article","title":"Dependencies"},"doc://BigInt/documentation/BigInt/Performance":{"url":"\/documentation\/bigint\/performance","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","type":"topic","abstract":[],"role":"article","title":"Performance"}}}