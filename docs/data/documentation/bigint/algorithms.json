{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References"]}],"metadata":{"role":"article","roleHeading":"Article","title":"Algorithms","modules":[{"name":"BigInt"}]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"sections":[],"variants":[{"paths":["\/documentation\/bigint\/algorithms"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"","level":2,"text":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some of the algorithms used in BigInt are described below."}]},{"text":"Multiplication","level":3,"type":"heading","anchor":"Multiplication"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"ToomCook-3 algorithm for numbers above 12800 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Karatsuba algorithm for numbers above 6400 bits","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","anchor":"Division-and-Remainder","text":"Division and Remainder"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Exact Division - Jebelean’s exact division algorithm","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Greatest Common Divisor and Extended Greatest Common Divisor","level":3,"anchor":"Greatest-Common-Divisor-and-Extended-Greatest-Common-Divisor"},{"inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase."}],"type":"paragraph"},{"type":"heading","anchor":"Modular-Exponentiation","text":"Modular Exponentiation","level":3},{"inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits"},{"text":" ","type":"text"},{"type":"text","text":"and Montgomery reduction for larger exponents."}],"type":"paragraph"},{"level":3,"text":"Inverse Modulus","type":"heading","anchor":"Inverse-Modulus"},{"type":"paragraph","inlineContent":[{"text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7.","type":"text"},{"text":" ","type":"text"},{"text":"Else, it is computed via the extended GCD algorithm.","type":"text"}]},{"anchor":"Square-Root","type":"heading","level":3,"text":"Square Root"},{"inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase."}],"type":"paragraph"},{"text":"Square Root Modulo a Prime Number","level":3,"anchor":"Square-Root-Modulo-a-Prime-Number","type":"heading"},{"inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL].","type":"text"}],"type":"paragraph"},{"anchor":"Prime-Number-Test","level":3,"type":"heading","text":"Prime Number Test"},{"inlineContent":[{"type":"text","text":"Miller-Rabin test."}],"type":"paragraph"},{"anchor":"Prime-Number-Generation","level":3,"type":"heading","text":"Prime Number Generation"},{"type":"paragraph","inlineContent":[{"text":"The algorithm from Java BigInteger translated to Swift.","type":"text"}]},{"level":3,"text":"Factorial","anchor":"Factorial","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SplitRecursive"},{"type":"text","text":" algorithm from Peter Luschny: "},{"identifier":"https:\/\/www.luschny.de","isActive":true,"type":"reference"}],"type":"paragraph"},{"anchor":"Fibonacci","text":"Fibonacci","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"fastDoubling"},{"type":"text","text":" algorithm from Project Nayuki: "},{"type":"reference","identifier":"https:\/\/www.nayuki.io","isActive":true}]},{"text":"Jacobi and Kronecker symbols","level":3,"type":"heading","anchor":"Jacobi-and-Kronecker-symbols"},{"inlineContent":[{"text":"Algorithm 2.3.5 from [CRANDALL].","type":"text"}],"type":"paragraph"},{"level":3,"type":"heading","text":"Bernoulli Numbers","anchor":"Bernoulli-Numbers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"type":"text","text":" "},{"text":"but no fractional arithmetic.","type":"text"}]},{"level":3,"text":"Chinese Remainder Theorem","type":"heading","anchor":"Chinese-Remainder-Theorem"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://BigInt/documentation/BigInt/Usage":{"url":"\/documentation\/bigint\/usage","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","title":"Usage","type":"topic"},"https://www.luschny.de":{"identifier":"https:\/\/www.luschny.de","titleInlineContent":[{"text":"https:\/\/www.luschny.de","type":"text"}],"title":"https:\/\/www.luschny.de","url":"https:\/\/www.luschny.de","type":"link"},"doc://BigInt/documentation/BigInt/Fractions":{"url":"\/documentation\/bigint\/fractions","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions","title":"Fractions","type":"topic"},"doc://BigInt/documentation/BigInt/Chinese":{"type":"topic","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese","title":"Chinese Remainder Theorem","url":"\/documentation\/bigint\/chinese"},"doc://BigInt/documentation/BigInt/Dependencies":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","abstract":[],"title":"Dependencies","type":"topic","url":"\/documentation\/bigint\/dependencies","kind":"article","role":"article"},"doc://BigInt/documentation/BigInt/Examples":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples","abstract":[],"kind":"article","title":"Examples","url":"\/documentation\/bigint\/examples","type":"topic","role":"article"},"doc://BigInt/documentation/BigInt/References":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","abstract":[],"title":"References","type":"topic","url":"\/documentation\/bigint\/references","kind":"article","role":"article"},"doc://BigInt/documentation/BigInt":{"url":"\/documentation\/bigint","role":"collection","identifier":"doc:\/\/BigInt\/documentation\/BigInt","type":"topic","kind":"symbol","abstract":[],"title":"BigInt"},"doc://BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","abstract":[],"kind":"article","title":"Performance","url":"\/documentation\/bigint\/performance","type":"topic","role":"article"},"https://www.nayuki.io":{"identifier":"https:\/\/www.nayuki.io","title":"https:\/\/www.nayuki.io","type":"link","url":"https:\/\/www.nayuki.io","titleInlineContent":[{"text":"https:\/\/www.nayuki.io","type":"text"}]}}}