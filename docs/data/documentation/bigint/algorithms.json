{"primaryContentSections":[{"kind":"content","content":[{"text":"","level":2,"type":"heading","anchor":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some of the algorithms used in BigInt are described below."}]},{"text":"Multiplication","type":"heading","level":3,"anchor":"Multiplication"},{"items":[{"content":[{"inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ToomCook-3 algorithm for numbers above 12800 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Karatsuba algorithm for numbers above 6400 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","anchor":"Division-and-Remainder","text":"Division and Remainder","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}]}]}]},{"text":"Greatest Common Divisor and Extended Greatest Common Divisor","anchor":"Greatest-Common-Divisor-and-Extended-Greatest-Common-Divisor","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase.","type":"text"}]},{"level":3,"anchor":"Modular-Exponentiation","type":"heading","text":"Modular Exponentiation"},{"inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits"},{"text":" ","type":"text"},{"text":"and Montgomery reduction for larger exponents.","type":"text"}],"type":"paragraph"},{"text":"Inverse Modulus","anchor":"Inverse-Modulus","type":"heading","level":3},{"inlineContent":[{"text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Else, it is computed via the extended GCD algorithm."}],"type":"paragraph"},{"text":"Square Root","level":3,"type":"heading","anchor":"Square-Root"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase.","type":"text"}]},{"type":"heading","text":"Square Root Modulo a Prime Number","level":3,"anchor":"Square-Root-Modulo-a-Prime-Number"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL].","type":"text"}]},{"type":"heading","level":3,"anchor":"Prime-Number-Test","text":"Prime Number Test"},{"inlineContent":[{"type":"text","text":"Miller-Rabin test."}],"type":"paragraph"},{"level":3,"text":"Prime Number Generation","type":"heading","anchor":"Prime-Number-Generation"},{"type":"paragraph","inlineContent":[{"text":"The algorithm from Java BigInteger translated to Swift.","type":"text"}]},{"text":"Factorial","level":3,"anchor":"Factorial","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"SplitRecursive"}]},{"type":"text","text":" algorithm from Peter Luschny: https:\/\/www.luschny.de"}]},{"text":"Fibonacci","type":"heading","anchor":"Fibonacci","level":3},{"inlineContent":[{"text":"The ","type":"text"},{"inlineContent":[{"text":"fastDoubling","type":"text"}],"type":"emphasis"},{"text":" algorithm from Project Nayuki: https:\/\/www.nayuki.io","type":"text"}],"type":"paragraph"},{"anchor":"Jacobi-and-Kronecker-symbols","level":3,"type":"heading","text":"Jacobi and Kronecker symbols"},{"inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]."}],"type":"paragraph"},{"text":"Bernoulli Numbers","level":3,"anchor":"Bernoulli-Numbers","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"text":" ","type":"text"},{"type":"text","text":"but no fractional arithmetic."}]},{"text":"Chinese Remainder Theorem","anchor":"Chinese-Remainder-Theorem","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]."}]}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/Usage","doc:\/\/BigInt\/documentation\/BigInt\/Examples","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/Fractions","doc:\/\/BigInt\/documentation\/BigInt\/Chinese","doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","doc:\/\/BigInt\/documentation\/BigInt\/References"]}],"variants":[{"paths":["\/documentation\/bigint\/algorithms"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"metadata":{"modules":[{"name":"BigInt"}],"title":"Algorithms","roleHeading":"Article","role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"references":{"doc://BigInt/documentation/BigInt/Examples":{"url":"\/documentation\/bigint\/examples","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Examples","type":"topic","abstract":[],"role":"article","title":"Examples"},"doc://BigInt/documentation/BigInt/Fractions":{"url":"\/documentation\/bigint\/fractions","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Fractions","type":"topic","abstract":[],"role":"article","title":"Fractions"},"doc://BigInt/documentation/BigInt/Performance":{"url":"\/documentation\/bigint\/performance","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","type":"topic","abstract":[],"role":"article","title":"Performance"},"doc://BigInt/documentation/BigInt/Chinese":{"url":"\/documentation\/bigint\/chinese","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Chinese","type":"topic","abstract":[],"role":"article","title":"Chinese Remainder Theorem"},"doc://BigInt/documentation/BigInt/References":{"url":"\/documentation\/bigint\/references","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","type":"topic","abstract":[],"role":"article","title":"References"},"doc://BigInt/documentation/BigInt/Usage":{"url":"\/documentation\/bigint\/usage","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Usage","type":"topic","abstract":[],"role":"article","title":"Usage"},"doc://BigInt/documentation/BigInt/Dependencies":{"url":"\/documentation\/bigint\/dependencies","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Dependencies","type":"topic","abstract":[],"role":"article","title":"Dependencies"},"doc://BigInt/documentation/BigInt":{"role":"collection","title":"BigInt","abstract":[],"kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt","url":"\/documentation\/bigint","type":"topic"}}}